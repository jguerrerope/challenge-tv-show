apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// It is not safe to store access token raw in some file that is pushed to a public remote repository. We will
// put the access token into ignored file secrets.properties. Please create an tmdb_v3_token field in local.properties
// and assign your access token. For example: tmdb_v3_token="MyAccessToken"

def getAccessToken() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    def accessToken = properties.getProperty('tmdb_v3_token', null)
    if (accessToken == null) {
        throw new GradleException(
                "Oh! Access token is missing. Please go to your local.properties file and define an tmdb_v3_token")
    }
    return accessToken
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.jguerrerope.tvchallenge"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "TMDB_ACCESS_TOKEN", getAccessToken()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //kotlin core
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.kotlinVersion"

    // android core
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "android.arch.paging:runtime:$rootProject.pagingVersion"

    // android architecture components
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    implementation "android.arch.lifecycle:runtime:$rootProject.archLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.roomVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.roomVersion"

    // android view vendor utils
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    //kotlin/java utils
    implementation "org.jetbrains.anko:anko-commons:$rootProject.ankoVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rxKotlinVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3LoggingInterceptor"
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    //test unit core
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "android.arch.core:core-testing:$archLifecycleVersion"
    testImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.mockwebServerVersion"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$rootProject.mockitokotlinVersion"

    //android test core
    androidTestImplementation "com.android.support.test:runner:$rootProject.androidRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoCoreVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
}
